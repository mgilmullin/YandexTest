# -*- coding: utf-8 -*-
# Author: Mansur Gilmullin


# ----------------------------------------------------------------------------------------------------------------------
# Подготовка к собеседованию в Яндекс: задача "D. Генерация скобочных последовательностей"
# ----------------------------------------------------------------------------------------------------------------------
# Дано целое число n. Требуется вывести все правильные скобочные последовательности длины 2 ⋅ n,
# упорядоченные лексикографически (см. https://ru.wikipedia.org/wiki/Лексикографический_порядок).
# В задаче используются только круглые скобки.
# Желательно получить решение, которое работает за время, пропорциональное общему количеству правильных
# скобочных последовательностей в ответе, и при этом использует объём памяти, пропорциональный n.
# ----------------------------------------------------------------------------------------------------------------------
# Формат ввода:
# Единственная строка входного файла содержит целое число n, 0 ≤ n ≤ 11
# ----------------------------------------------------------------------------------------------------------------------
# Формат вывода:
# Выходной файл содержит сгенерированные правильные скобочные последовательности, упорядоченные лексикографически.
# ----------------------------------------------------------------------------------------------------------------------
# Пример 1:
# Ввод	Вывод
# 2     (())
#       ()()
# ----------------------------------------------------------------------------------------------------------------------
# Пример 2:
# Ввод	Вывод
# 3     ((()))
#       (()())
#       (())()
#       ()(())
#       ()()()
# ----------------------------------------------------------------------------------------------------------------------


RESULT = []  # список строк с уникальными скобочными последовательностями


def Task4(n, line="", leftBrackets=0, rightBrackets=0):
    global RESULT

    if leftBrackets == n and rightBrackets == n:
        RESULT.append(line + "\n")  # сохраняем очередную полностью заполненную скобками строку

    else:
        if leftBrackets < n:
            Task4(n, line + "(", leftBrackets + 1, rightBrackets)

        if rightBrackets < leftBrackets:
            Task4(n, line + ")", leftBrackets, rightBrackets + 1)


if __name__ == '__main__':
    # получаем входные параметры из файла:
    with open("input.txt", "r", encoding="UTF-8") as fH:
        n = int(fH.readlines()[0].rstrip("\n"))  # целое число n, 0 <= n <= 11
    # print(n)

    Task4(n)  # запускаем рекурсивно функцию, которая создаст нам список RESULT с уникальными последовательностями скобок

    with open("output.txt", "w", encoding="UTF-8") as fH:
        fH.writelines(RESULT)

    for item in RESULT:
        print(item.rstrip("\n"))
